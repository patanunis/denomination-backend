const Employee = require('../models/Employee');
const jwt = require('jsonwebtoken');

exports.register = async (req, res) => {
  try {
    const { Emp_Name, Role, Mobile_No, Password, Email_ID } = req.body;

    // Check for duplicate email
    const existing = await Employee.findOne({ Email_ID });
    if (existing) return res.status(409).json({ message: 'Email already registered' });

    // Create new employee — Employee_ID will be auto-generated by model
    const newEmp = new Employee({ Emp_Name, Role, Mobile_No, Password, Email_ID });
    await newEmp.save();

    res.status(201).json({ message: 'Registered successfully', Employee_ID: newEmp.Employee_ID });
  } catch (err) {
    console.error('❌ Registration error:', err);
    res.status(500).json({ message: 'Server error during registration' });
  }
};

exports.login = async (req, res) => {
  try {
    const { Role, Email_ID, Password } = req.body;

    const user = await Employee.findOne({ Role, Email_ID, Password });
    if (!user) return res.status(401).json({ message: 'Invalid credentials' });

    const token = jwt.sign(
      { id: user._id, Role: user.Role, Email_ID: user.Email_ID },
      process.env.JWT_SECRET,
      { expiresIn: '1h' }
    );

    // ✅ Include user object in response
    res.json({
      message: 'Login successful',
      token,
      user: {
        id: user._id,
        name: user.Emp_Name,
        role: user.Role
      }
    });
  } catch (err) {
    console.error('❌ Login error:', err);
    res.status(500).json({ message: 'Server error during login' });
  }
};


exports.forgotPassword = async (req, res) => {
  try {
    const { Email_ID, newPassword } = req.body;

    const user = await Employee.findOneAndUpdate({ Email_ID }, { Password: newPassword });
    if (!user) return res.status(404).json({ message: 'User not found' });

    res.json({ message: 'Password updated successfully' });
  } catch (err) {
    console.error('❌ Password reset error:', err);
    res.status(500).json({ message: 'Server error during password reset' });
  }
};
